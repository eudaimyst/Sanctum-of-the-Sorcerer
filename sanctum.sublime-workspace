{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"oppo",
				"oppositeDir"
			],
			[
				"nearbyR",
				"nearbyRooms"
			],
			[
				"expan",
				"expandDirectionComplete"
			],
			[
				"nei",
				"neighbour"
			],
			[
				"neigh",
				"neighbour"
			],
			[
				"startP",
				"startPos"
			],
			[
				"n",
				"neighbours"
			],
			[
				"wall",
				"wallTiles"
			],
			[
				"oppos",
				"oppositeDir"
			],
			[
				"poten",
				"potentialAvailTiles"
			],
			[
				"doo",
				"doorWidthMin"
			],
			[
				"contentce",
				"display.contentCenterX"
			],
			[
				"get",
				"display.getCurrentStage()"
			],
			[
				"make",
				"makeDoors"
			],
			[
				"tile",
				"pointsExpand.tileStore.tileColumns"
			],
			[
				"tileC",
				"tileCount"
			],
			[
				"tileR",
				"tileRow"
			],
			[
				"tiles",
				"tileStore"
			],
			[
				"con",
				"display.contentWidth"
			],
			[
				"scen",
				"sceneGroup"
			],
			[
				"mag",
				"mapgen"
			],
			[
				"mapge",
				"mapgen"
			],
			[
				"map",
				"mapgenIndex"
			],
			[
				"index",
				"indexedTiles"
			],
			[
				"tileS",
				"tileStore"
			],
			[
				"indexe",
				"indexedTiles"
			],
			[
				"sce",
				"sceneGroup"
			],
			[
				"glow",
				"image:glowIn"
			],
			[
				"fille",
				"fill.effect"
			],
			[
				"newIm",
				"display.newImage()"
			],
			[
				"create",
				"createBackgroundImages"
			],
			[
				"path",
				"jsonParamsPath"
			],
			[
				"para",
				"params"
			],
			[
				"ran",
				"math.random()"
			],
			[
				"default",
				"defaultString"
			],
			[
				"elem",
				"elementData"
			],
			[
				"sectio",
				"sectionStore"
			],
			[
				"coll",
				"collapsable"
			],
			[
				"colla",
				"collapsable"
			],
			[
				"contentH",
				"contentHeight"
			],
			[
				"newR",
				"display.newRect()"
			],
			[
				"conten",
				"section.group.contentHeight"
			],
			[
				"createS",
				"createSaveTextWindow"
			],
			[
				"pero",
				"timer.performWithDelay()"
			],
			[
				"drop",
				"dropdown"
			],
			[
				"highest",
				"highestIndexPos"
			],
			[
				"displ",
				"displayIndex"
			],
			[
				"found",
				"foundObject"
			],
			[
				"getP",
				"getParentTree"
			],
			[
				"ray",
				"rayBackward"
			],
			[
				"elme",
				"elementData"
			],
			[
				"eleme",
				"elementData"
			],
			[
				"setC",
				"setFillColor()"
			],
			[
				"parti",
				"particleColorParams"
			],
			[
				"finishC",
				"finishColorVariance"
			],
			[
				"draw",
				"section:drawElements"
			],
			[
				"keep",
				"keepTitle"
			],
			[
				"tool",
				"toolbarWindowParams"
			],
			[
				"regi",
				"registerInputField"
			],
			[
				"numbe",
				"numberKeys"
			],
			[
				"click",
				"M.clickedObject"
			],
			[
				"clic",
				"M.clickedObject"
			],
			[
				"setF",
				"setFillColor()"
			],
			[
				"inpu",
				"inputIndicator"
			],
			[
				"wi",
				"width"
			],
			[
				"wid",
				"texture.width"
			],
			[
				"isB",
				"isButtonGroup"
			],
			[
				"drawB",
				"drawButton"
			],
			[
				"num",
				"numChildren"
			],
			[
				"dropd",
				"dropdownGroup"
			],
			[
				"contentC",
				"display.contentCenterY"
			],
			[
				"content",
				"display.contentCenterX"
			],
			[
				"grou",
				"section.group:insert"
			],
			[
				"prev",
				"prevElement"
			],
			[
				"linE",
				"lineElements"
			],
			[
				"drawSection",
				"drawSectionElements"
			],
			[
				"settingsW",
				"settingsWindowSections"
			],
			[
				"elemen",
				"elementsinLine"
			],
			[
				"pairs",
				"pairs()"
			],
			[
				"emitt",
				"emitterStore"
			],
			[
				"cont",
				"contentWidth"
			],
			[
				"tit",
				"titleCollision"
			],
			[
				"closeB",
				"closeButton"
			],
			[
				"close",
				"closeButton"
			],
			[
				"mouse",
				"mouse.pressed"
			],
			[
				"hei",
				"titleHeight"
			],
			[
				"anch",
				"obj.anchorY"
			],
			[
				"fram",
				"frameImageSize"
			],
			[
				"newI",
				"display.newImageRect"
			],
			[
				"frameI",
				"frameImageSize"
			],
			[
				"move",
				"moveDistance"
			],
			[
				"slide",
				"slideTimer"
			],
			[
				"normalF",
				"normalFrame"
			],
			[
				"normal",
				"normalFrameLocation"
			],
			[
				"createBut",
				"createButton"
			],
			[
				"halfSe",
				"halfScreenY"
			],
			[
				"moveS",
				"mapMoveSpeed"
			],
			[
				"eas",
				"easingList"
			],
			[
				"enem",
				"enemySpawners"
			],
			[
				"movD",
				"moveDelta"
			],
			[
				"modul",
				"modulesToCreateGroupsFor"
			],
			[
				"smooth",
				"smoothDeltaFrames"
			],
			[
				"smoothD",
				"M.smoothDeltaFrames"
			],
			[
				"imag",
				"imageAffix"
			],
			[
				"screent",
				"screenTileIDs"
			],
			[
				"coo",
				"cam.coords.y1"
			],
			[
				"half",
				"M.halfExtents.x"
			],
			[
				"deltaA",
				"deltaAvCount"
			],
			[
				"framd",
				"frameDeltaTime"
			],
			[
				"delta",
				"deltaAvTotal"
			],
			[
				"deltaAv",
				"deltaAvTotal"
			],
			[
				"moveD",
				"M.moveDelta.x"
			],
			[
				"remov",
				"removedModule"
			],
			[
				"mod",
				"modulesSkipped"
			],
			[
				"modu",
				"modulesSkipped"
			],
			[
				"module",
				"modulesToReturn"
			],
			[
				"receiv",
				"receiveModules"
			],
			[
				"reici",
				"receivingMod.receiveModules"
			],
			[
				"recei",
				"receiverModules"
			],
			[
				"atta",
				"attack"
			],
			[
				"star",
				"attack.startPos.x"
			],
			[
				"attackT",
				"attack.timer"
			],
			[
				"acti",
				"M.actions.move"
			],
			[
				"end",
				"attack.endPos.x"
			],
			[
				"char",
				"charge"
			],
			[
				"outC",
				"outCubic"
			],
			[
				"attac",
				"attackList"
			],
			[
				"attak",
				"attackList"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.lua",
			"settings":
			{
				"buffer_size": 216,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"copil",
				"Copilot: Sign In"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install pa",
				"Package Control: Install Package"
			],
			[
				"package c",
				"Package Control: List Packages"
			],
			[
				"packa",
				"Preferences: Browse Packages"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"packagere",
				"PackageResourceViewer: Open Resource"
			],
			[
				"outli",
				"Outline: Toggle Sort"
			],
			[
				"out",
				"Browse Mode: Outline (Left)"
			],
			[
				"packageres",
				"PackageResourceViewer: Open Resource"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"codemap",
				"CodeMap: Toggle Visibility"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"outline",
				"Browse Mode: Outline (Left)"
			],
			[
				"Package Control: remo",
				"Package Control: Remove Package"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"colorsu",
				"Colorsublime: Install Theme"
			],
			[
				"bro",
				"Browse Mode: Outline (Left)"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: a",
				"Package Control: Add Repository"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"where <luacheck>",
			"where <luacheck",
			"where luacheck",
			"where <luacheck",
			"where <luacheck>",
			"where luacheck"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": true,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/user/Documents/Corona Projects/Sanctum of the Sorcerer"
	],
	"file_history":
	[
		"/C/Users/user/Documents/Corona Projects/MovementTest/scenes/game_scene.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/augments.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/camera.lua",
		"/C/Users/user/Documents/Corona Projects/Sanctum of the Sorcerer/Sanctum of the Sorcerer/config.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/menu_scene.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/main.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/input/key_input.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/map/gen_functions.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/map/generator.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/project.sublime-project",
		"/C/Users/user/Documents/Corona Projects/MovementTest/particle_scene.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/mapgen_scene.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/map_old.lua",
		"/D/KoboldAI/customsettings_template.json",
		"/D/KoboldAI/loader.settings",
		"/C/Users/user/AppData/Roaming/Sublime Text/Packages/LaTeX/Symbol List - Sections.tmPreferences",
		"/C/Users/user/AppData/Roaming/Sublime Text/Packages/User/CodeMap/Code - Map",
		"/C/Users/user/Documents/Corona Projects/MovementTest/particle_designer.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/menu.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/game.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/empty_module.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/editor.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/map_generator.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/key_input.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/mouse_input.lua",
		"/C/Users/user/AppData/Roaming/Sublime Text/Packages/User/outline.sublime-settings",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/easing.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/character.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/enemies.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/debug.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/globals.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/items.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/map.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/mapgen.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/spells.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/ui.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/utilities.lua",
		"/C/Users/user/AppData/Roaming/Sublime Text/Packages/User/Base File.sublime-settings",
		"/C/Users/user/AppData/Roaming/Sublime Text/Packages/Alignment/Default (Windows).sublime-keymap",
		"/C/Users/user/AppData/Roaming/Sublime Text/Packages/Alignment/Base File.sublime-settings",
		"/C/Users/user/AppData/Roaming/Sublime Text/Packages/User/CoronaSDKLua.sublime-settings",
		"/C/Users/user/AppData/Roaming/Sublime Text/Packages/ColorPicker/ColorPicker.sublime-settings",
		"/C/Users/user/AppData/Roaming/Sublime Text/Packages/User/ColorPicker.sublime-settings",
		"/C/Users/user/Documents/Corona Projects/MovementTest/empty_scene.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/config.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/keyinput.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/lib/enemy.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/level_editor.lua",
		"/C/Users/user/AppData/Roaming/Sublime Text/Packages/CoronaSDK-SublimeText/Corona Editor.sublime-settings",
		"/C/Users/user/Documents/Corona Projects/MovementTest/level_editor_old.lua",
		"/C/Users/user/Documents/Corona Projects/MovementTest/build.settings",
		"/C/Users/user/Documents/Corona Projects/LevelGenerator/menu.lua",
		"/C/Users/user/Documents/Corona Projects/LevelGenerator/config.lua",
		"/C/Users/user/Documents/Corona Projects/LevelGenerator/level_editor.lua",
		"/C/Users/user/Documents/Corona Projects/TopDown/main_original.lua"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			"C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\augments.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\camera.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\character.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\debug.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\easing.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\editor.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\enemies.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\globals.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\items.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\key_input.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\map.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\mapgen.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\mouse_input.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\spells.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\ui.lua,C:\\Users\\user\\Documents\\Corona Projects\\MovementTest\\lib\\utilities.lua",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"lib.easing",
			"local easing",
			"easing",
			"self.neighbours",
			"b1",
			"self.neighbours",
			"cRoom.bounds.",
			"room.bounds.",
			"roomStore",
			"prettify",
			"images[",
			"group",
			"background,",
			"background, ",
			"bgGroup",
			"background",
			"print",
			"params",
			"emitter.params",
			"self.params",
			"self.parmas",
			"emitterObject[param]",
			"emitterObject.param",
			"emitterObject.params",
			"self.emitterObject.params",
			"self.params",
			"object.params",
			"emitterRestartParams",
			"self.table[i].name",
			"lfs",
			"createEmitter(",
			"blendModes",
			"param name has",
			"drowdown",
			"elementData",
			"self.settingsWindow",
			"selft.settingsWindow",
			"selectedValue",
			":insert(",
			"colGroup:insert",
			".colGroup:insert",
			"self.",
			"setBlendMode",
			"elementData",
			"dropdown.items",
			"createDropdownItem",
			"dropdown.group",
			"createCollision",
			"colGroup",
			"createCollision",
			"createEmitter",
			"createEmitter(",
			"settings",
			"createEmitter",
			"createWindow",
			"emitter",
			"window.emitter",
			"xSpacing",
			"xLabelSpacing",
			"xSpacing",
			"elementData",
			"adding window section ",
			"createCollision",
			"label",
			"settingsWindowSections",
			"sectionData",
			"sections",
			"emitter",
			"~",
			"createWindow",
			"self.colGroup",
			"colGroup",
			"display.newGroup",
			"colGroup",
			"self.element",
			"self.dropdown",
			"element.",
			"windowStore",
			"createCollision",
			"x.png",
			"createCollision",
			"createDropdownItem",
			":insert",
			"so we can",
			"settingsWindowSections",
			"param",
			"section.group",
			"elementCount",
			"sectionCount",
			"sectionName",
			"elementCount",
			"listener",
			"we ",
			"it ",
			"the ",
			"it ",
			"the ",
			"view",
			"timer.perform",
			"timer.",
			"createTitle",
			"bgGroup",
			"bg.",
			"parchment",
			"data.width",
			"data.height",
			"createButton",
			"enemyS",
			"enemySpawners",
			"createSpawners",
			"M.enemySpawners",
			"updateSpawners",
			"spawnEnemy",
			"screenPos",
			"M.enemyS",
			"screen.x",
			"isVisible",
			".rect = ",
			"spellsGroup",
			"spawn enemy ",
			"char.ch",
			"character =",
			"character",
			"M.character",
			"char",
			"M.character",
			"character",
			"button:"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"cb.",
			"rb.",
			"background",
			"element.data",
			"M.",
			"colGroup",
			"self.",
			"",
			" ",
			"height",
			"characterGroup",
			"idto",
			"util.",
			"",
			"deltaPos.",
			"attack.",
			"self.attack.",
			"self.pos.screen.y",
			"self.pos.screen.x",
			"self.pos.y",
			"self.pos.x",
			"self.pos.s",
			"move.target.",
			"move.direction",
			"M.enemyData",
			"enemiesGroup",
			"M.lineCounter",
			"M.debugTextCounter",
			"enemy.",
			"animTypeAttack",
			"animTypeWalk",
			"animAttack",
			"animWalk",
			"itemsGroup",
			"tile",
			"",
			"M.",
			"Segment",
			"segment",
			"math.ceil",
			"count",
			"direction",
			"addStep(corridor, direction, count)",
			"room",
			"M.gen.cRoomCounter",
			"M.gen.cRoom",
			"M.gen.CorridorRoom",
			"currentRoom.corridorY",
			"currentRoom.corridorX",
			"M.gen.rooms",
			"M.gen.y",
			"M.gen.x",
			"gen.mapIndex",
			"gen.counter",
			"gen.displayGroup",
			"gen.tileSize",
			"gen.size",
			"gen.sizeX",
			"sizeX",
			"mapSizeY",
			"mapSizeX",
			"M.gen.",
			"particles.groupSize",
			"enemyStore",
			"utilities.frameDeltaTime",
			"prefix..g.image",
			"g.move.",
			"M.",
			"scene.enemyStore",
			"e.animations.walk",
			"e.animations.attack",
			"scene.move.",
			"character",
			"animAttack",
			"animWalk",
			"animAttack",
			"e.animations.walk.images",
			"e.animations.attack.images",
			"animWalk.phase",
			"animWalk.frameCount",
			"animWalk.rate",
			"animWalk.timer",
			"animAttack.phase",
			"animAttack.frameCount",
			"animAttack.rate",
			"animAttack.timer",
			"scene.frameDeltaTime",
			"e",
			"e.animationTimer",
			"enemyToMove",
			"enemy",
			"walkPrefix",
			"fs",
			"\"/walk_\"",
			"",
			"animationTimer",
			"characterMoveDirection == move.",
			"characterMoveDirection = move.",
			"4",
			"3",
			"2",
			"1",
			"not ",
			"pickedTileID",
			"mapIndex"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.lua",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 216,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".",
									"selector": "source.lua.corona"
								}
							],
							"copilot.completion._is_saving": false,
							"copilot.completion.is_visible": false,
							"copilot.completion.is_visible_panel_completions": false,
							"copilot.completion.is_waiting_completion": false,
							"copilot.completion.is_waiting_panel_completions": false,
							"copilot.completion.original_layout": null,
							"git_gutter_is_enabled": true,
							"lsp_active": true,
							"lsp_uri": "file:///C:/Users/user/Documents/Corona%20Projects/Sanctum%20of%20the%20Sorcerer/main.lua",
							"syntax": "Packages/CoronaSDK-SublimeText/CoronaSDKLua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 188.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.mdpopups-dummy":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "sanctum.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 238.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
